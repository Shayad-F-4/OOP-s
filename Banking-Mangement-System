 ðŸš§ Bank Management System (C++) ðŸš§

> **Status: Under Construction ðŸš€  
> This project is currently being developed. Features may be incomplete or unstable


#include<iostream>
#include<vector>
using namespace std;

int n;

class Bank {
private:
    string name;
    int AccNum, bal;

public:
    void accept() {
        cout << "Enter Name: ";
        cin>>name;
        cout << "Enter Account Number: ";
        cin >> AccNum;
        cout << "Enter Balance: ";
        cin >> bal;
    }




    void display() {
        cout <<"Name: " <<name<<endl;
        cout <<"Account Num: "<<AccNum<<endl;
        cout <<"Balance $: "<<bal<<endl;
    }



    int fetchAccNum(){ //fetching Account num for ensure Account is Created or Not //Authintication
        return AccNum;
    }



     int findAcc(Bank Accounts[], int accnum) {//we create an object Accounts with calling Class
        for (int i=0; i<n; i++) {
            if (Accounts[i].fetchAccNum()==accnum) {
                return i;//found index
            }
        }
        return -1; //not found
    }




     void search(Bank Accounts[], int accno) {
        int idx=findAcc(Accounts, accno);
        if (idx!=-1) {
            cout<<"Account Found! "<<accno<<endl;
            Accounts[idx].display();
        } else{
            cout<<"Account Not Found "<<endl;
            cout<<"Please try again "<<endl;
        }
    }



     void deposit(Bank Accounts[], int accno, int money) {
        int idx=findAcc(Accounts , accno);
        if (idx==-1) {
            cout<<"Account Not Found."<<endl;
        } else {
            Accounts[idx].bal += money;
            cout<<"Money Deposited Successfully! "<<endl;
        }
    }




     void withdraw(Bank Accounts[], int accno, int money) {
        int idx=findAcc(Accounts , accno);
        if (idx==-1) {
            cout<<"Account Not Found."<<endl;
        } else{
            if(Accounts[idx].bal>=money) {
                Accounts[idx].bal-=money;
                cout<<"Money Withdraw Successfully!"<<endl;
            } else{
                cout<<"Balance is low "<<endl;
                cout<<"You can withdraw only $: "<<Accounts[idx].bal<<endl;
            }
        }
    }
};


int main() {
    Bank Accounts[10];
    int accno;
    int money;
    cout<<"Enter number of users (in betn 10): ";
    cin>>n;

   for(int i=0; i<n; i++){
    cout<<"Enter Details User:"<<i+1<<endl;
    Accounts[i].accept();
}

int choice;
cout<<"\n\t++ Bank Management system ++\n\n"<<endl;
cout<<"\t1.Show all Accounts:"<<endl;
cout<<"\t2.Search Account(by account number):"<<endl;
cout<<"\t3.Deposite: "<<endl;
cout<<"\t4.withdraw: "<<endl;
cout<<"5.Exit! "<<endl;

cout<<"Enter Choice: ";
cin>>choice;

switch(choice){
    case 1:  
    for(int i=0; i<n; i++){
        cout<<"Details of student: "<<i+1<<endl;
        Accounts[i].display();
    }
        break;

    case 2:
        cout<<"Enter Account number to search:";
        cin>>accno;
        Bank::search(Accounts, accno);
        break;

    case 3:
        cout<<"Enter Account Number: ";
        cin>>accno;
        cout<<"Enter the Money To deposite(in doller): ";
        cin>>money;
        Bank::deposite(Accounts,accno,money);
        break;

    case 4:
        cout<<"Enter Account Number: ";
        cin>>accno;
        cout<<"Enter the Money To Withdraw(in doller): ";
        Bank::withdraw(Accounts,accno,money);
        cin>>money;
        break;


   
    case 5:
        cout<<"Thank you for using our system"<<endl;
        cout<<"Have a Good day"<<endl;
        break;

    return 0;
}
